{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initCode",
          "type": "bytes"
        }
      ],
      "name": "createSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea26469706673582212206343dad82d5fe83d465064d1ec3d2994982f13f73259f137ba7547ce9551680564736f6c63430008130033",
    "sourceMap": "205:842:3:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea26469706673582212206343dad82d5fe83d465064d1ec3d2994982f13f73259f137ba7547ce9551680564736f6c63430008130033",
    "sourceMap": "205:842:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:500;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;774:32:65;;;756:51;;744:2;729:18;545:500:3;;;;;;;;610:14;;670:16;683:2;610:14;670:8;;:16;:::i;:::-;662:25;;;:::i;:::-;654:34;;;-1:-1:-1;698:25:3;726:14;:8;735:2;726:8;;:14;:::i;:::-;698:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;904:19:3;;698:42;;-1:-1:-1;698:42:3;928:2;;-1:-1:-1;698:42:3;;-1:-1:-1;904:19:3;-1:-1:-1;879:23:3;;;698:42;867:7;860:5;855:76;844:87;;960:1;954:8;944:18;;986:7;981:58;;1026:1;1009:19;;981:58;626:419;;;545:500;;;;:::o;14:591:65:-;84:6;92;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;201:9;188:23;230:18;271:2;263:6;260:14;257:34;;;287:1;284;277:12;257:34;325:6;314:9;310:22;300:32;;370:7;363:4;359:2;355:13;351:27;341:55;;392:1;389;382:12;341:55;432:2;419:16;458:2;450:6;447:14;444:34;;;474:1;471;464:12;444:34;519:7;514:2;505:6;501:2;497:15;493:24;490:37;487:57;;;540:1;537;530:12;487:57;571:2;563:11;;;;;593:6;;-1:-1:-1;14:591:65;;-1:-1:-1;;;;14:591:65:o;818:331::-;923:9;934;976:8;964:10;961:24;958:44;;;998:1;995;988:12;958:44;1027:6;1017:8;1014:20;1011:40;;;1047:1;1044;1037:12;1011:40;-1:-1:-1;;1073:23:65;;;1118:25;;;;;-1:-1:-1;818:331:65:o;1154:337::-;-1:-1:-1;;1275:19:65;;1362:11;;;;1393:2;1385:11;;1382:103;;;1472:2;1466;1459:3;1455:2;1451:12;1448:1;1444:20;1440:29;1436:2;1432:38;1428:47;1419:56;;1382:103;;;1154:337;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createSender(bytes)": "570e1a36"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"params\":{\"initCode\":\"the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\"},\"returns\":{\"sender\":\"the returned address of the created account, or zero address on failure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSender(bytes)\":{\"notice\":\"call the \\\"initCode\\\" factory to create and return the sender account address\"}},\"notice\":\"helper contract for EntryPoint, to call userOp.initCode from a \\\"neutral\\\" address, which is explicitly not the entryPoint itself.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/core/SenderCreator.sol\":\"SenderCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0x44b9449fec82d6cdfb01d52fdd5a72f90099c651316123810cf9633f00b018c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a9c0487390e72638681d175c45bc92425c802fffdca4bd0ae8457782ee284612\",\"dweb:/ipfs/QmVbzuehCUWJWqEHyMWuc6cRVbxfcMdFsmGL9o4Wz7WY2x\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createSender(bytes)": {
            "params": {
              "initCode": "the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata"
            },
            "returns": {
              "sender": "the returned address of the created account, or zero address on failure."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createSender(bytes)": {
            "notice": "call the \"initCode\" factory to create and return the sender account address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/account-abstraction/contracts/core/SenderCreator.sol": "SenderCreator"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/SenderCreator.sol": {
        "keccak256": "0x44b9449fec82d6cdfb01d52fdd5a72f90099c651316123810cf9633f00b018c2",
        "urls": [
          "bzz-raw://a9c0487390e72638681d175c45bc92425c802fffdca4bd0ae8457782ee284612",
          "dweb:/ipfs/QmVbzuehCUWJWqEHyMWuc6cRVbxfcMdFsmGL9o4Wz7WY2x"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/account-abstraction/contracts/core/SenderCreator.sol",
    "id": 2599,
    "exportedSymbols": {
      "SenderCreator": [
        2598
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1012:3",
    "nodes": [
      {
        "id": 2553,
        "nodeType": "PragmaDirective",
        "src": "36:24:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 2598,
        "nodeType": "ContractDefinition",
        "src": "205:842:3",
        "nodes": [
          {
            "id": 2597,
            "nodeType": "FunctionDefinition",
            "src": "545:500:3",
            "nodes": [],
            "body": {
              "id": 2596,
              "nodeType": "Block",
              "src": "626:419:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2563,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "644:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2596,
                      "src": "636:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2562,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "636:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2574,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2568,
                              "name": "initCode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2557,
                              "src": "670:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "3230",
                              "id": 2570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "683:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20_by_1",
                                "typeString": "int_const 20"
                              },
                              "value": "20"
                            },
                            "id": 2571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "670:16:3",
                            "startExpression": {
                              "hexValue": "30",
                              "id": 2569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "679:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 2567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "662:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes20_$",
                            "typeString": "type(bytes20)"
                          },
                          "typeName": {
                            "id": 2566,
                            "name": "bytes20",
                            "nodeType": "ElementaryTypeName",
                            "src": "662:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "662:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      ],
                      "id": 2565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "654:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 2564,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "654:7:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "636:52:3"
                },
                {
                  "assignments": [
                    2576
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2576,
                      "mutability": "mutable",
                      "name": "initCallData",
                      "nameLocation": "711:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2596,
                      "src": "698:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2575,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "698:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2580,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2577,
                      "name": "initCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2557,
                      "src": "726:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "id": 2579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexRangeAccess",
                    "src": "726:14:3",
                    "startExpression": {
                      "hexValue": "3230",
                      "id": 2578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "735:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr_slice",
                      "typeString": "bytes calldata slice"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "698:42:3"
                },
                {
                  "assignments": [
                    2582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2582,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "755:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2596,
                      "src": "750:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2581,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "750:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2583,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "750:12:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "830:142:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "844:87:3",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "860:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "860:5:3"
                            },
                            {
                              "name": "factory",
                              "nodeType": "YulIdentifier",
                              "src": "867:7:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "876:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "initCallData",
                                  "nodeType": "YulIdentifier",
                                  "src": "883:12:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "897:4:3",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "879:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "879:23:3"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "initCallData",
                                  "nodeType": "YulIdentifier",
                                  "src": "910:12:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "904:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "904:19:3"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "928:2:3",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "call",
                            "nodeType": "YulIdentifier",
                            "src": "855:4:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "855:76:3"
                        },
                        "variableNames": [
                          {
                            "name": "success",
                            "nodeType": "YulIdentifier",
                            "src": "844:7:3"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "944:18:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "960:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "954:5:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "954:8:3"
                        },
                        "variableNames": [
                          {
                            "name": "sender",
                            "nodeType": "YulIdentifier",
                            "src": "944:6:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 2563,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "867:7:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2576,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "883:12:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2576,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "910:12:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2560,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "944:6:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 2582,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "844:7:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 2584,
                  "nodeType": "InlineAssembly",
                  "src": "821:151:3"
                },
                {
                  "condition": {
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "985:8:3",
                    "subExpression": {
                      "id": 2585,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2582,
                      "src": "986:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2595,
                  "nodeType": "IfStatement",
                  "src": "981:58:3",
                  "trueBody": {
                    "id": 2594,
                    "nodeType": "Block",
                    "src": "995:44:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2587,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2560,
                            "src": "1009:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1026:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1018:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2588,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1018:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1018:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1009:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2593,
                        "nodeType": "ExpressionStatement",
                        "src": "1009:19:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2555,
              "nodeType": "StructuredDocumentation",
              "src": "235:305:3",
              "text": " call the \"initCode\" factory to create and return the sender account address\n @param initCode the initCode value from a UserOp. contains 20 bytes of factory address, followed by calldata\n @return sender the returned address of the created account, or zero address on failure."
            },
            "functionSelector": "570e1a36",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSender",
            "nameLocation": "554:12:3",
            "parameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "initCode",
                  "nameLocation": "582:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "567:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:25:3"
            },
            "returnParameters": {
              "id": 2561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2560,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "618:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2597,
                  "src": "610:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:16:3"
            },
            "scope": 2598,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SenderCreator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2554,
          "nodeType": "StructuredDocumentation",
          "src": "62:142:3",
          "text": " helper contract for EntryPoint, to call userOp.initCode from a \"neutral\" address,\n which is explicitly not the entryPoint itself."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2598
        ],
        "name": "SenderCreator",
        "nameLocation": "214:13:3",
        "scope": 2599,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 3
}